{{ with index .Values "hooks" }}
{{- if and .enabled (eq .secret.apiKey "") -}}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ $.Release.Name }}-hook-config-service-account"
  labels:
    {{- include "argocd-image-updater.labels" $ | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-delete-policy": before-hook-creation
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "{{ $.Release.Name }}-hook-config-role"
  labels:
    {{- include "argocd-image-updater.labels" $ | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
  # Create can not be restricted as per:
  # https://kubernetes.io/docs/reference/access-authn-authz/rbac/
  #
  # Therefore we are adding two rules.
  # - First rule allows the app to only get/update/patch specific resource
  # - Second allows the app to create any secret since this is not a security issue
  #
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["argocd-image-updater-secret"]
  verbs: ["get", "update","patch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create"]
  # Can only rollout itself
- apiGroups: ["apps", "extensions"]
  resources: ["deployments"]
  resourceNames: [{{ include "argocd-image-updater.fullname" $ }}]
  verbs: ["get", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ $.Release.Name }}-config-role-binding"
  labels:
    {{- include "argocd-image-updater.labels" $ | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-3"
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-delete-policy": before-hook-creation
subjects:
- kind: ServiceAccount
  name: "{{ $.Release.Name }}-hook-config-service-account"
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: "{{ $.Release.Name }}-hook-config-role"
{{- end }}
{{- end }}

