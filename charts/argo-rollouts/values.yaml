installCRDs: true
keepCRDs: true

clusterInstall: true

## String to partially override "argo-rollouts.fullname" template
##
nameOverride:

## String to fully override "argo-rollouts.fullname" template
##
fullnameOverride:

## Override APIVersions
## If you want to template helm charts but cannot access k8s API server
## you can set api versions here
apiVersionOverrides:
  # String to override apiVersion of ingresses rendered by this helm chart
  ingress: "" # networking.k8s.io/v1beta1

## Override the Kubernetes version, which is used to evaluate certain manifests
##
kubeVersionOverride: ""

controller:
  component: rollouts-controller
  ## Node selectors and tolerations for server scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  nodeSelector: {}
  tolerations: []
  affinity: {}
  replicas: 1
  image:
    registry: quay.io
    repository: argoproj/argo-rollouts
    tag: ""
    pullPolicy: IfNotPresent

  ## Additional command line arguments to pass to rollouts-controller
  ##
  extraArgs: []

  ## Additional containers to add to the rollouts controller deployment
  ## This will be rendered as the literal yaml
  extraContainers: []

  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 50m
  #    memory: 64Mi

  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
      additionalLabels: {}
      additionalAnnotations: {}

  ## Readiness and liveness probes for rollouts controller
  livenessProbe:
    httpGet:
      path: /metrics
      port: 8090
    initialDelaySeconds: 30
    periodSeconds: 20
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 10
  readinessProbe:
    httpGet:
      path: /metrics
      port: 8090
    initialDelaySeconds: 15
    periodSeconds: 5
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 4

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

## Annotations to be added to all CRDs
##
crdAnnotations: {}

## Annotations to be added to the Rollout pods
##
podAnnotations: {}

## Security Context to set on pod level
##
podSecurityContext:
  runAsNonRoot: true

## Security Context to set on container level
##
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

## Annotations to be added to the Rollout service
##
serviceAnnotations: {}

## Labels to be added to the Rollout pods
##
podLabels: {}

# Secrets with credentials to pull images from a private registry
imagePullSecrets: []
# - name: argo-pull-secret

dashboard:
  enabled: false
  component: rollouts-dashboard
  ## Node selectors and tolerations for server scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  nodeSelector: {}
  tolerations: []
  affinity: {}
  image:
    registry: quay.io
    repository: argoproj/kubectl-argo-rollouts
    tag: ""
    pullPolicy: IfNotPresent
  ## Additional command line arguments to pass to rollouts-dashboard
  ##
  extraArgs: []
  resources: {}
  podSecurityContext:
    runAsNonRoot: true
  containerSecurityContext: {}
  service:
    type: ClusterIP
    # -- LoadBalancer will get created with the IP specified in this field
    loadBalancerIP: ""
    # -- Source IP ranges to allow access to service from
    loadBalancerSourceRanges: []
    # -- Dashboard service external IPs
    externalIPs: []
    # -- Service annotations
    annotations: {}
    # -- Service labels
    labels: {}
    # -- Service port name
    portName: dashboard
    # -- Service port
    port: 3100
    # -- Service target port
    targetPort: 3100
  serviceAccount:
    create: true
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  ## Ingress configuration.
  ## ref: https://kubernetes.io/docs/user-guide/ingress/
  ##
  ingress:
    enabled: false
    annotations: {}
    labels: {}
    ingressClassName: ""

    ## Argo Rollouts Dashboard Ingress.
    ## Hostnames must be provided if Ingress is enabled.
    ## Secrets must be manually created in the namespace
    ##
    hosts: []
      # - argorollouts.example.com
    paths:
      - /
    pathType: Prefix
    extraPaths: []
      # - path: /*
      #   backend:
      #     serviceName: ssl-redirect
      #     servicePort: use-annotation
      ## for Kubernetes >=1.19 (when "networking.k8s.io/v1" is used)
      # - path: /*
      #   pathType: Prefix
      #   backend:
      #     service
      #       name: ssl-redirect
      #       port:
      #         name: use-annotation
    tls: []
      # - secretName: argorollouts-example-tls
      #   hosts:
      #     - argorollouts.example.com
