# docker registry
registry: quay.io

# The image pull policy
imagePullPolicy: Always

# Secrets with credentials to pull images from a private registry
imagePullSecrets: []
# - name: argo-pull-secret

# ServiceAccount to use for running controller.
serviceAccount: argo-events-sa

# serviceAccountAnnotations can be used to enable GKE workload identity, or other use-cases
serviceAccountAnnotations: {}

# Create service accounts in additional namespaces specified
# The SA will always be created in the release namespaces
additionalSaNamespaces: []
  # - argo-prod
additionalServiceAccountRules:
- apiGroups:
    - apiextensions.k8s.io
  verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  resources:
    - customresourcedefinitions

instanceID: argo-events

# set `singleNamespace` to false to have the controllers
# listen on all namespaces.  Otherwise the controllers will listen
# on the namespace provided
namespace: argo-events
singleNamespace: true

# sensor controller
sensorController:
  name: sensor-controller
  image: argoproj/argo-events
  tag: ""
  replicaCount: 1
  extraEnv: []
    # - name: DEBUG_LOG
    #   value: "true"
  sensorImage: argoproj/argo-events
  podAnnotations: {}
  nodeSelector: {}
  podLabels: {}
  priorityClassName: ""
  tolerations: []
  affinity: {}
  resources: {}
  containerSecurityContext: {}

eventsourceController:
  name: eventsource-controller
  image: argoproj/argo-events
  tag: ""
  replicaCount: 1
  extraEnv: []
    # - name: DEBUG_LOG
    #   value: "true"
  eventsourceImage: argoproj/argo-events
  podAnnotations: {}
  nodeSelector: {}
  podLabels: {}
  priorityClassName: ""
  tolerations: []
  affinity: {}
  resources: {}
  containerSecurityContext: {}

eventbusController:
  name: eventbus-controller
  image: argoproj/argo-events
  tag: ""
  replicaCount: 1
  extraEnv: []
    # - name: DEBUG_LOG
    #   value: "true"
  podAnnotations: {}
  nodeSelector: {}
  podLabels: {}
  priorityClassName: ""
  tolerations: []
  affinity: {}
  resources: {}
  natsStreamingImage: nats-streaming:0.22.1
  natsMetricsExporterImage: natsio/prometheus-nats-exporter:0.8.0
  containerSecurityContext: {}

securityContext:
  runAsNonRoot: true
  runAsUser: 9731
