{{- if .Values.workflow.serviceAccount.create -}}

  {{- /*
      Cardinality-check the namespaces/namespace variables
      This type check is done only once, here. It would be overkill to perform it for other RBAC resources as well.
  */}}
  {{- if and .Values.controller.workflowNamespaces .Values.workflow.namespace }}
    {{- fail "Please set either controller.workflowNamespaces or workflow.namespace for the service account, not both" }}
  {{- end }}

  {{- /*
      Type-check the namespaces variable for being a list ("slice")
      This type check is done only once, here. It would be overkill to perform it for other RBAC resources as well.
    */}}
  {{- if .Values.controller.workflowNamespaces }}
    {{- if not ( kindIs "slice" .Values.controller.workflowNamespaces ) }}
      {{- fail ( printf "workflow.namespaces is a slice, got %s %s" ( kindOf .Values.controller.workflowNamespaces ) .Values.controller.workflowNamespaces ) }}
    {{- end }}
  {{- end }}

  {{ range $namespace := append .Values.controller.workflowNamespaces .Values.workflow.namespace | compact | uniq }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $.Values.workflow.serviceAccount.name }}
  namespace: {{ $namespace }}
  annotations:
    {{- toYaml $.Values.workflow.serviceAccount.annotations | nindent 4 }}
  {{- end }}
{{- end }}
