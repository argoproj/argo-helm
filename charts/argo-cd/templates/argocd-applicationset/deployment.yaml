{{- if .Values.applicationSet.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "argo-cd.applicationSet.fullname" . }}
  labels:
    {{- include "argo-cd.labels" (dict "context" . "component" .Values.applicationSet.name "name" .Values.applicationSet.name) | nindent 4 }}
spec:
  replicas: {{ .Values.applicationSet.replicas }}
  selector:
    matchLabels:
      {{- include "argo-cd.selectorLabels" (dict "context" . "name" .Values.applicationSet.name) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "argo-cd.labels" (dict "context" . "component" .Values.applicationSet.name "name" .Values.applicationSet.name) | nindent 8 }}
        {{- with (mergeOverwrite (deepCopy .Values.global.podLabels) .Values.applicationSet.podLabels) }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with (mergeOverwrite (deepCopy .Values.global.podAnnotations) .Values.applicationSet.podAnnotations) }}
      annotations:
        {{- range $key, $value := . }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
      {{- with .Values.applicationSet.imagePullSecrets | default .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.applicationSet.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      serviceAccountName: {{ include "argo-cd.applicationSet.serviceAccountName" . }}
      containers:
        - name: {{ .Values.applicationSet.name }}
          image: {{ default .Values.global.image.repository .Values.applicationSet.image.repository }}:{{ default (include "argo-cd.tag" .) .Values.applicationSet.image.tag }}
          imagePullPolicy: {{ default .Values.global.image.imagePullPolicy .Values.applicationSet.image.imagePullPolicy }}
          command:
            - entrypoint.sh
            - argocd-applicationset-controller
            - --argocd-repo-server={{ include "argo-cd.repoServer.server" . }}
            - --probe-addr=:{{ .Values.applicationSet.containerPorts.probe }}
            - --metrics-addr=:{{ .Values.applicationSet.containerPorts.metrics }}
            - --webhook-addr=:{{ .Values.applicationSet.containerPorts.webhook }}
            - --policy={{ .Values.applicationSet.policy }}
            - --dry-run={{ .Values.applicationSet.dryRun }}
            - --logformat
            - {{ default .Values.global.logging.format .Values.applicationSet.logFormat }}
            - --loglevel
            - {{ default .Values.global.logging.level .Values.applicationSet.logLevel }}
            {{- if gt (.Values.applicationSet.replicas | int64) 1 }}
            - --enable-leader-election=true
            {{- end }}
            {{- with .Values.applicationSet.args }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          env:
            {{- with .Values.applicationSet.env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          {{- with .Values.applicationSet.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: metrics
              containerPort: {{ .Values.applicationSet.containerPorts.metrics }}
              protocol: TCP
            - name: probe
              containerPort: {{ .Values.applicationSet.containerPorts.probe }}
              protocol: TCP
            - name: webhook
              containerPort: {{ .Values.applicationSet.containerPorts.webhook }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: probe
            initialDelaySeconds: {{ .Values.applicationSet.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.applicationSet.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.applicationSet.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.applicationSet.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.applicationSet.livenessProbe.failureThreshold }}
          readinessProbe:
            tcpSocket:
              port: probe
            initialDelaySeconds: {{ .Values.applicationSet.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.applicationSet.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.applicationSet.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.applicationSet.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.applicationSet.readinessProbe.failureThreshold }}
          volumeMounts:
            - mountPath: /app/config/ssh
              name: ssh-known-hosts
            - mountPath: /app/config/tls
              name: tls-certs
            - mountPath: /app/config/gpg/source
              name: gpg-keys
            - mountPath: /app/config/gpg/keys
              name: gpg-keyring
            - mountPath: /tmp
              name: tmp
            {{- with .Values.applicationSet.volumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.applicationSet.resources | nindent 12 }}
          {{- with .Values.global.hostAliases }}
          hostAliases:
            {{- toYaml . | nindent 6 }}
          {{- end }}
          {{- with .Values.applicationSet.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- with .Values.applicationSet.extraContainers }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.applicationSet.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.applicationSet.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.applicationSet.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- with .Values.applicationSet.volumes }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      - name: ssh-known-hosts
        configMap:
          name: argocd-ssh-known-hosts-cm
      - name: tls-certs
        configMap:
          name: argocd-tls-certs-cm
      - name: gpg-keys
        configMap:
          name: argocd-gpg-keys-cm
      - name: gpg-keyring
        emptyDir: {}
      - name: tmp
        emptyDir: {}
{{- end }}
