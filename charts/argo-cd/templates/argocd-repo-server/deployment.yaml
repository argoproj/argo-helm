apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "argo-cd.repoServer.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "argo-cd.name" . }}-{{ .Values.repoServer.name }}
    helm.sh/chart: {{ include "argo-cd.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: {{ .Values.repoServer.name }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "argo-cd.name" . }}-{{ .Values.repoServer.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  revisionHistoryLimit: 5
  replicas: 1
  template:
    metadata:
      {{- if .Values.repoServer.podAnnotations }}
      annotations:
      {{- range $key, $value := .Values.repoServer.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "argo-cd.name" . }}-{{ .Values.repoServer.name }}
        helm.sh/chart: {{ include "argo-cd.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/component: {{ .Values.repoServer.name }}
        {{- if .Values.controller.podLabels }}
{{- toYaml .Values.controller.podLabels | nindent 8 }}
        {{- end }}
    spec:
      containers:
      - name: {{ .Values.repoServer.name }}
        image: {{ default .Values.global.image.repository .Values.repoServer.image.repository }}:{{ default .Values.global.image.tag .Values.repoServer.image.tag }}
        imagePullPolicy: {{ default .Values.global.image.imagePullPolicy .Values.repoServer.image.imagePullPolicy }}
        command:
        - argocd-repo-server
        {{- if .Values.redis.enabled }}
        - --redis
        - {{ template "argo-cd.redis.fullname" . }}:{{ .Values.redis.servicePort }}
        {{- end }}
        - --loglevel
        - {{ .Values.repoServer.logLevel }}
        {{- range $key, $value := .Values.repoServer.extraArgs }}
          {{- if $value }}
        - --{{ $key }}={{ $value }}
          {{- else }}
        - --{{ $key }}
          {{- end }}
        {{- end }}
        volumeMounts:
        {{- if .Values.repoServer.volumeMounts }}
{{- toYaml .Values.repoServer.volumeMounts | nindent 10}}
        {{- end }}
        {{- if .Values.configs.knownHosts }}
        - mountPath: /app/config/ssh
          name: ssh-known-hosts
        {{- end }}
        {{- if .Values.configs.tlsCerts }}
        - mountPath: /app/config/tls
          name: tls-certs
        {{- end }}
        ports:
        - name: repo-server
          containerPort: {{ .Values.repoServer.containerPort }}
          protocol: TCP
        {{ if .Values.repoServer.metrics.enabled }}
        - name: metrics
          containerPort: 8084
          protocol: TCP
        {{- end }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.repoServer.containerPort }}
          initialDelaySeconds: {{ .Values.repoServer.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.repoServer.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.repoServer.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.repoServer.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.repoServer.livenessProbe.failureThreshold }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.repoServer.containerPort }}
          initialDelaySeconds: {{ .Values.repoServer.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.repoServer.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.repoServer.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.repoServer.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.repoServer.readinessProbe.failureThreshold }}
        resources:
{{- toYaml .Values.repoServer.resources | nindent 10 }}
    {{- if .Values.repoServer.nodeSelector }}
      nodeSelector:
{{- toYaml .Values.repoServer.nodeSelector | nindent 8 }}
    {{- end }}
    {{- if .Values.repoServer.tolerations }}
      tolerations:
{{- toYaml .Values.repoServer.tolerations | nindent 8 }}
    {{- end }}
    {{- if .Values.repoServer.affinity }}
      affinity:
{{- toYaml .Values.repoServer.affinity | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "argo-cd.repoServerServiceAccountName" . }}
      volumes:
      {{- if .Values.repoServer.volumes }}
{{- toYaml .Values.repoServer.volumes | nindent 8}}
      {{- end }}
      {{- if .Values.configs.knownHosts }}
      - configMap:
          name: argocd-ssh-known-hosts-cm
        name: ssh-known-hosts
      {{- end }}
      {{- if .Values.configs.tlsCerts }}
      - configMap:
          name: argocd-tls-certs-cm
        name: tls-certs
      {{- end }}