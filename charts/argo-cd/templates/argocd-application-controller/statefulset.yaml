{{- $redisHa := (index .Values "redis-ha") -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "argo-cd.controller.fullname" . }}
  labels:
    {{- include "argo-cd.labels" (dict "context" . "component" .Values.controller.name "name" .Values.controller.name) | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "argo-cd.selectorLabels" (dict "context" . "name" .Values.controller.name) | nindent 6 }}
  serviceName: {{ template "argo-cd.controller.fullname" . }}
  revisionHistoryLimit: 5
  replicas: {{ .Values.controller.replicas }}
  template:
    metadata:
      {{- with (mergeOverwrite (deepCopy .Values.global.podAnnotations) .Values.controller.podAnnotations) }}
      annotations:
        {{- range $key, $value := . }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
      labels:
        {{- include "argo-cd.labels" (dict "context" . "component" .Values.controller.name "name" .Values.controller.name) | nindent 8 }}
        {{- with (mergeOverwrite (deepCopy .Values.global.podLabels) .Values.controller.podLabels) }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.controller.imagePullSecrets | default .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.global.securityContext }}
      securityContext: {{- toYaml .Values.global.securityContext | nindent 8 }}
      {{- end }}
      containers:
      - command:
        - argocd-application-controller
        - --status-processors
        - {{ .Values.controller.args.statusProcessors | quote }}
        - --operation-processors
        - {{ .Values.controller.args.operationProcessors | quote }}
        - --app-resync
        - {{ .Values.controller.args.appResyncPeriod | quote }}
        - --app-hard-resync
        - {{ .Values.controller.args.appHardResyncPeriod | quote }}
        - --self-heal-timeout-seconds
        - {{ .Values.controller.args.selfHealTimeout | quote }}
        - --repo-server
        - {{ template "argo-cd.repoServer.fullname" . }}:{{ .Values.repoServer.service.port }}
        - --repo-server-timeout-seconds
        - {{ .Values.controller.args.repoServerTimeoutSeconds | quote }}
        - --logformat
        - {{ default .Values.global.logging.format .Values.controller.logFormat }}
        - --loglevel
        - {{ default .Values.global.logging.level .Values.controller.logLevel }}
        {{- if .Values.controller.metrics.applicationLabels.enabled }}
        {{- range .Values.controller.metrics.applicationLabels.labels }}
        - --metrics-application-labels
        - {{ . }}
        {{- end }}
        {{- end }}
        {{- if or (and .Values.redis.enabled (not $redisHa.enabled)) (and $redisHa.enabled $redisHa.haproxy.enabled) }}
        - --redis
        - {{ template "argo-cd.redis.fullname" . }}:{{ .Values.redis.servicePort }}
        {{- else if and .Values.externalRedis.host .Values.externalRedis.port }}
        - --redis
        - {{ .Values.externalRedis.host }}:{{ .Values.externalRedis.port }}
        {{- end }}
        {{- with .Values.controller.extraArgs }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        image: {{ default .Values.global.image.repository .Values.controller.image.repository }}:{{ default (include "argo-cd.defaultTag" .) .Values.controller.image.tag }}
        imagePullPolicy: {{ default .Values.global.image.imagePullPolicy .Values.controller.image.imagePullPolicy }}
        name: {{ .Values.controller.name }}
        {{- with .Values.controller.containerSecurityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        env:
          {{- with .Values.controller.env }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          - name: ARGOCD_CONTROLLER_REPLICAS
            value: {{ .Values.controller.replicas | quote }}
          {{- include "argo-cd.redisPasswordEnv" . | nindent 10 }}
        {{- with .Values.controller.envFrom }}
        envFrom:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        ports:
        - name: controller
          containerPort: {{ .Values.controller.containerPort }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.controller.containerPort }}
          initialDelaySeconds: {{ .Values.controller.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.controller.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.controller.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.controller.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.controller.livenessProbe.failureThreshold }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.controller.containerPort }}
          initialDelaySeconds: {{ .Values.controller.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.controller.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.controller.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.controller.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.controller.readinessProbe.failureThreshold }}
        workingDir: /home/argocd
        volumeMounts:
        - name: argocd-home
          mountPath: /home/argocd
        - mountPath: /app/config/controller/tls
          name: argocd-repo-server-tls
        {{- with .Values.controller.volumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        resources:
          {{- toYaml .Values.controller.resources | nindent 10 }}
      {{- with .Values.controller.extraContainers }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- range $constraint := . }}
      - {{ toYaml $constraint | nindent 8 | trim }}
          {{- if not $constraint.labelSelector }}
        labelSelector:
          matchLabels:
            {{- include "argo-cd.selectorLabels" (dict "context" $ "name" $.Values.controller.name) | nindent 12 }}
          {{- end }}
        {{- end }}
      {{- end }}
      serviceAccountName: {{ template "argo-cd.controllerServiceAccountName" . }}
      {{- with .Values.global.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      volumes:
      - emptyDir: {}
        name: argocd-home
      - name: argocd-repo-server-tls
        secret:
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
          - key: ca.crt
            path: ca.crt
          optional: true
          secretName: argocd-repo-server-tls
      {{- with .Values.controller.volumes }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.controller.initContainers }}
      initContainers:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.controller.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
