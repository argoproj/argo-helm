{{- if and .Values.server.ingress.enabled .Values.server.ingress.grpc.enabled }}
{{- $service := include "argo-cd.server.fullname" . }}
{{- $hostname := printf "grpc.%s" (default .Values.global.domain .Values.server.ingress.hostname) }}
apiVersion: {{ include "argo-cd.apiVersion.ingress" . }}
kind: Ingress
metadata:
  name: {{ $service }}-grpc
  labels:
    {{- include "argo-cd.labels" (dict "context" . "component" .Values.server.name "name" "grpc") | nindent 4 }}
    {{- with .Values.server.ingress.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.server.ingress.grpc.annotations }}
  annotations:
    {{- range $key, $value := . }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
spec:
  {{- if eq (include "argo-cd.apiVersion.ingress" $) "networking.k8s.io/v1" }}
  {{- with .Values.server.ingress.ingressClassName }}
  ingressClassName: {{ . }}
  {{- end }}
  {{- end }}
  rules:
    - host: {{ default $hostname .Values.server.ingress.grpc.hostname }}
      http:
        paths:
        - path: {{ .Values.server.ingress.path }}
          pathType: {{ .Values.server.ingress.pathType }}
          backend:
            {{- include "argo-cd.ingressBackend" (dict "context" . "service" $service "port" "https") | nindent 12 }}
  tls:
    # Do not change, this is provided by Argo CD
    - secretName: argocd-secret
      hosts:
        - {{ default $hostname .Values.server.ingress.grpc.hostname }}
{{- end }}
