{{- $serviceName := include "argo-cd.server.fullname" . -}}
{{- $servicePort :=  .Values.server.service.servicePortHttp -}}
apiVersion: {{ include "argo-cd.ingress.apiVersion" . }}
kind: Ingress
metadata:
  annotations:
    {{- if .Values.customExternalDnsName }}
    kubernetes.io/ingress.class: {{ .Values.customIngressControllerClassAnnotation }}
    {{- end }}
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    ingress.kubernetes.io/force-ssl-redirect: "false"
    ingress.kubernetes.io/ssl-redirect: "false"
  name: {{ template "argo-cd.server.fullname" . }}
  labels:
    {{- include "argo-cd.labels" (dict "context" . "component" .Values.server.name "name" .Values.server.name) | nindent 4 }}
spec:
  rules:
    - host: {{ include "coreweave.externalDnsName" . }}
      http:
        paths:
          - path: /
            {{- if eq (include "argo-cd.ingress.apiVersion" $) "networking.k8s.io/v1" }}
            pathType: Prefix
            {{- end }}
            backend:
              {{- if eq (include "argo-cd.ingress.apiVersion" $) "networking.k8s.io/v1" }}
              service:
                name: {{ $serviceName }}
                port:
                  {{- if kindIs "float64" $servicePort }}
                  number: {{ $servicePort }}
                  {{- else }}
                  name: {{ $servicePort }}
                  {{- end }}
              {{- else }}
              serviceName: {{ $serviceName }}
              servicePort: {{ $servicePort }}
              {{- end }}
  tls:
    - hosts:
      - {{ include "coreweave.externalDnsName" . }}
      secretName: {{ include "coreweave.certSecretName" . }}