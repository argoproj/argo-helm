{{- $hostname := default .Values.global.domain .Values.server.ingress.hostname -}}
{{- $httpPort := .Values.server.service.namedTargetPort | ternary .Values.server.service.servicePortHttpName .Values.server.service.servicePortHttp -}}
{{- $httpsPort := .Values.server.service.namedTargetPort | ternary .Values.server.service.servicePortHttpsName .Values.server.service.servicePortHttps -}}
{{- $insecure := index .Values.configs.params "server.insecure" | toString }}
{{- $serviceName := include "argo-cd.server.fullname" . -}}
{{- $servicePort := (and .Values.server.ingress.tls.enabled (eq $insecure "true")) | ternary $httpPort $httpsPort }}
---
apiVersion: {{ include "argo-cd.apiVersion.ingress" . }}
kind: Ingress
metadata:
  name: {{ $serviceName }}
  labels:
    {{- include "argo-cd.labels" (dict "context" . "component" .Values.server.name "name" .Values.server.name) | nindent 4 }}
    {{- with .Values.server.ingress.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with include "argo-cd.server.ingress.annotations" . }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
spec:
  {{- if eq (include "argo-cd.apiVersion.ingress" $) "networking.k8s.io/v1" }}
  {{- with .Values.server.ingress.ingressClassName }}
  ingressClassName: {{ . }}
  {{- end }}
  {{- end }}
  rules:
    {{- if .Values.server.ingress.alb.enabled }}
    - host: {{ $hostname }}
      http:
        paths:
        {{- with .Values.server.ingress.extraPaths }}
          {{- toYaml . | nindent 6 }}
        {{- end }}
        - path: {{ .Values.server.ingress.path }}
          pathType: {{ .Values.server.ingress.pathType }}
          backend:
            {{- include "argo-cd.ingressBackend" (dict "context" . "service" $serviceName "port" $httpPort) | nindent 12 }}
    - host: {{ $hostname }}
      http:
        paths:
        {{- with .Values.server.ingress.extraPaths }}
          {{- toYaml . | nindent 6 }}
        {{- end }}
        - path: {{ .Values.server.ingress.path }}
          pathType: {{ .Values.server.ingress.pathType }}
          backend:
            {{- include "argo-cd.ingressBackend" (dict "context" . "service" (printf "%s-grpc" $serviceName) "port" $httpsPort) | nindent 12 }}
    {{- else }}
    - host: {{ $hostname }}
      http:
        paths:
        {{- with .Values.server.ingress.extraPaths }}
          {{- toYaml . | nindent 6 }}
        {{- end }}
        - path: {{ .Values.server.ingress.path }}
          pathType: {{ .Values.server.ingress.pathType }}
          backend:
            {{- include "argo-cd.ingressBackend" (dict "context" . "service" $serviceName "port" $servicePort) | nindent 12 }}
    {{- end }}
    {{- range .Values.server.ingress.extraHosts }}
    - host: {{ .name | quote }}
      http:
        paths:
          - path: {{ default "/" .path }}
            {{- if eq (include "argo-cd.apiVersion.ingress" $) "networking.k8s.io/v1" }}
            pathType: {{ default "ImplementationSpecific" .pathType }}
            {{- end }}
            backend:
              {{- include "argo-cd.ingressBackend" (dict "context" $ "service" $serviceName "port" $servicePort) | nindent 12 }}
    {{- end }}
  {{- if .Values.server.ingress.tls.enabled }}
  tls:
    {{- with .Values.server.ingress.extraTls }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
    - secretName: {{ .Values.server.ingress.tls.secretName }}
      hosts:
        - {{ $hostname }}
  {{- end }}
