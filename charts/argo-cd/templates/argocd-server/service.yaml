apiVersion: v1
kind: Service
metadata:
  name: {{ template "argo-cd.server.fullname" . }}
  labels:
    {{- include "argo-cd.labels" (dict "context" . "component" .Values.server.name "name" .Values.server.name) | nindent 4 }}
    {{- with .Values.server.service.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.server.service.annotations }}
  annotations:
    {{- range $key, $value := . }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
spec:
  type: {{ .Values.server.service.type }}
  sessionAffinity: {{ .Values.server.service.sessionAffinity }}
  {{- if and (eq .Values.server.service.type "ClusterIP") .Values.server.service.clusterIP -}}
  clusterIP: {{ .Values.server.service.clusterIP }}
  {{- end }}
  {{- if eq .Values.server.service.type "LoadBalancer" }}
  {{- with .Values.server.service.loadBalancerIP }}
  loadBalancerIP: {{ . }}
  {{- end }}
  {{- with .Values.server.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}
  {{- if or (eq .Values.server.service.type "LoadBalancer") (eq .Values.server.service.type "NodePort") }}
  externalTrafficPolicy: {{ .Values.server.service.externalTrafficPolicy }}
  {{- with .Values.server.service.externalIPs }}
  externalIPs:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}
  ports:
  - name: http
    protocol: TCP
    port: {{ .Values.server.service.ports.http }}
    {{- if eq .Values.server.service.type "NodePort" }}
    nodePort: {{ .Values.server.service.nodePorts.http }}
    {{- end }}
    targetPort: {{ .Values.server.containerPorts.server }}
  - name: https
    protocol: TCP
    port: {{ .Values.server.service.ports.https }}
    {{- if eq .Values.server.service.type "NodePort" }}
    nodePort: {{ .Values.server.service.nodePorts.https }}
    {{- end }}
    targetPort: {{ .Values.server.containerPorts.server }}
  selector:
    {{- include "argo-cd.selectorLabels" (dict "context" . "name" .Values.server.name) | nindent 4 }}
