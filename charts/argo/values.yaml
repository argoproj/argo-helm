images:
  namespace: argoproj
  controller: workflow-controller
  ui: argoui
  executor: argoexec
  tag: v2.2.1

crdVersion: v1alpha1

init:
  # By default the installation will not set an explicit one, which will mean it uses `default` for the namespace the chart is
  # being deployed to.  In RBAC clusters, that will almost certainly fail.  See the NOTES: section of the readme for more info.
  serviceAccount: ""

controller:
  # podAnnotations is an optional map of annotations to be applied to the controller Pods
  podAnnotations: {}
  metricsConfig:
    enabled: false
    path: /metrics
    port: 8080
  serviceAccount: argo
  name: workflow-controller
  workflowNamespaces:
    - default
  instanceID:
    # `instanceID.enabled` configures the controller to filter workflow submissions
    # to only those which have a matching instanceID attribute.
    enabled: false
    # NOTE: If `instanceID.enabled` is set to `true` then either `instanceID.userReleaseName`
    # or `instanceID.explicitID` must be defined.
    # useReleaseName: true
    # explicitID: unique-argo-controller-identifier
  logging:
    level: info
    globallevel: "0"

ui:
  enabled: true
  # only show workflows where UI installed
  forceNamespaceIsolation: false
  # optional map of annotations to be applied to the ui Pods
  podAnnotations: {}
  name: ui
  serviceType: ClusterIP
  servicePort: 80
  serviceAccount: argo-ui
  # Annotations to be applied to the UI Service
  serviceAnnotations: {}
  # Source ranges to allow access to service from. Only applies to
  # service type `LoadBalancer`
  loadBalancerSourceRanges: []

  ## Ingress configuration.
  ## ref: https://kubernetes.io/docs/user-guide/ingress/
  ##
  ingress:
    enabled: false

    ## Annotations to be added to the web ingress.
    ##
    # annotations:
    #   kubernetes.io/ingress.class: nginx
    #   kubernetes.io/tls-acme: "true"

    ## Hostnames.
    ## Must be provided if Ingress is enabled.
    ##
    # hosts:
    #   - argo.domain.com

    ## TLS configuration.
    ## Secrets must be manually created in the namespace.
    ##
    # tls:
    #   - secretName: argo-ui-tls
    #     hosts:
    #       - argo.domain.com

# Influences the creation of the ConfigMap for the workflow-controller itself.
useDefaultArtifactRepo: false
useStaticCredentials: true
artifactRepository:
  # archiveLogs will archive the main container logs as an artifact
  archiveLogs: false
  s3:
    # Note the `key` attribute is not the actual secret, it's the PATH to
    # the contents in the associated secret, as defined by the `name` attribute.
    accessKeySecret:
      # name: <releaseName>-minio (default)
      key: accesskey
    secretKeySecret:
      # name: <releaseName>-minio
      key: secretkey
    insecure: true
    # bucket:
    # endpoint:

# NOTE: These are setting attributes for the `minio` optional dependency
minio:
  # If set to true then chart installs minio and generate according artifactRepository section in workflow controller config map
  install: false
  defaultBucket:
    enabled: true
    name: argo-artifacts
